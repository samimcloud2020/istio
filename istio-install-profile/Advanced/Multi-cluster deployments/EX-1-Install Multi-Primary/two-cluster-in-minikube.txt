samim@ip-172-31-27-156:~/istio-1.18.1$ minikube start -p cluster1 
* [cluster1] minikube v1.30.1 on Ubuntu 22.04
* Automatically selected the docker driver
* Using Docker driver with root privileges
* Starting control plane node cluster1 in cluster cluster1
* Pulling base image ...
* Creating docker container (CPUs=2, Memory=3800MB) ...
* Preparing Kubernetes v1.26.3 on Docker 23.0.2 ...
  - Generating certificates and keys ...
  - Booting up control plane ...
  - Configuring RBAC rules ...
* Configuring bridge CNI (Container Networking Interface) ...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
* Verifying Kubernetes components...
* Enabled addons: storage-provisioner, default-storageclass
* Done! kubectl is now configured to use "cluster1" cluster and "default" namespace by default


samim@ip-172-31-27-156:~/istio-1.18.1$ minikube start -p cluster2
* [cluster2] minikube v1.30.1 on Ubuntu 22.04
* Automatically selected the docker driver
* Using Docker driver with root privileges
* Starting control plane node cluster2 in cluster cluster2
* Pulling base image ...
* Creating docker container (CPUs=2, Memory=3800MB) ...
* Preparing Kubernetes v1.26.3 on Docker 23.0.2 ...
  - Generating certificates and keys ...
  - Booting up control plane ...
  - Configuring RBAC rules ...
* Configuring bridge CNI (Container Networking Interface) ...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
* Verifying Kubernetes components...
* Enabled addons: storage-provisioner, default-storageclass
* Done! kubectl is now configured to use "cluster2" cluster and "default" namespace by default

samim@ip-172-31-27-156:~/istio-1.18.1$ minikube profile cluster1
* minikube profile was successfully set to cluster1

samim@ip-172-31-27-156:~/istio-1.18.1$ minikube profile cluster2
* minikube profile was successfully set to cluster2


samim@ip-172-31-27-156:~/istio-1.18.1$ kubectl config current-context
cluster1

samim@ip-172-31-27-156:~/istio-1.18.1$ kubectl config current-context
cluster2
